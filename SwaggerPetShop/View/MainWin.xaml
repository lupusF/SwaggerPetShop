<Window x:Class="SwaggerPetShop.View.MainWin"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SwaggerPetShop.View"
        xmlns:enums="clr-namespace:SwaggerPetShop.Model"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:uc="clr-namespace:SwaggerPetShop.View.Usercontrols"
        xmlns:resx="clr-namespace:SwaggerPetShop.Resources"
        mc:Ignorable="d"
        Title="Pet Store" Height="550" Width="1200">
    <Window.Resources>
        <ObjectDataProvider x:Key="petStatus" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="enums:PetStatus"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <BooleanToVisibilityConverter x:Key="BoolToVis" />
    </Window.Resources>
    <DockPanel>
        <Popup Name="PetNotFoundpopup" StaysOpen="False" IsOpen="{Binding IsPopUpOpen}"  Placement="Center">
            <TextBlock Text="{Binding PopupMessage}"
                    Background="AliceBlue"
                    Height="Auto"
                    Padding="5" Width="150"
                    TextWrapping="Wrap"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"/>
        </Popup>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="{x:Static resx:StringResource.Actions}">
                <MenuItem Header="{x:Static resx:StringResource.AddNewPet}"
                          Command="{Binding AddNewItemClickedCommand}"/>
            </MenuItem>
        </Menu>
        <Grid DockPanel.Dock="Left" Width="290">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <TextBlock Text="{x:Static resx:StringResource.SearchBy}" Grid.Column="0" Grid.RowSpan="2" VerticalAlignment="Center"/>
                <RadioButton x:Name="IdRadioButton" IsChecked="{Binding SearchById, Mode=TwoWay}" GroupName="SearchBy" Grid.Column="1" Grid.Row="0"  VerticalAlignment="Center">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Unchecked">
                            <i:InvokeCommandAction Command="{Binding RadioButtonLostFocusCommand, Mode=TwoWay}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </RadioButton>
                <RadioButton x:Name="StatusRadioButton"  IsChecked="{Binding SearchByStatus, Mode=TwoWay}"  GroupName="SearchBy"  Grid.Column="1" Grid.Row="1" VerticalAlignment="Center"/>
                <TextBox x:Name="petIdTextBox" Grid.Row="0" Grid.Column="2" Text="{Binding PetId, Mode=TwoWay}"  IsEnabled="{Binding Path=IsChecked, ElementName=IdRadioButton}"/>
                <ComboBox 
                      Grid.Row="2" 
                      Grid.Column="2" 
                      Width="140"  
                      ItemsSource="{Binding Source={StaticResource petStatus}}" 
                      SelectedValue="{Binding SelectedPetStatus}"
                      IsEnabled="{Binding Path=IsChecked, ElementName=StatusRadioButton}" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding SelectionChangedCommand, Mode=TwoWay}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
                <Button Content="{x:Static resx:StringResource.Search}" Command="{Binding SearchClickedCommand, Mode=TwoWay}" Grid.RowSpan="2" VerticalAlignment="Center" Grid.Column="3"/>
            </Grid>
            <Grid Grid.Row="1" >
                <ListView   
                      DockPanel.Dock ="Left"
                      ItemsSource="{Binding PetList}" 
                      Margin="5" 
                      Width="280"
                      Background="AliceBlue" 
                      SelectedValue="{Binding SelectedPet}">
                    <ListView.Resources>
                        <ContextMenu x:Key="ItemContextMenu">
                            <MenuItem Header="{x:Static resx:StringResource.ViewUpdate}" Command="{Binding Path=DataContext.ViewUpdateClickedCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" Background="WhiteSmoke" />
                            <MenuItem Header="{x:Static resx:StringResource.Delete}" Command="{Binding Path=DataContext.DeletePetCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" Background="WhiteSmoke" />
                        </ContextMenu>
                    </ListView.Resources>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListViewItem}" >
                            <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}" />
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <uc:DisplayPetList Pet="{Binding}">
                            </uc:DisplayPetList>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Grid>
        </Grid>
        <Grid  DockPanel.Dock="Right" Visibility="{Binding PetDetailsVisibility}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="40"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="60"/>
                <ColumnDefinition Width="60"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <uc:PetDetails DataContext="{Binding PetToDisplay}"  Pet="{Binding PetToDisplay}" Grid.ColumnSpan="3"/>
            <Button Command="{Binding SaveButtonClickedCommand}" CommandParameter="{Binding PetToDisplay}" Content="{x:Static resx:StringResource.Save}" Grid.Row="1" Grid.Column="0" Width="50" />
            <Button Command="{Binding CancelClickedCommand}" Content="{x:Static resx:StringResource.Cancel}" Grid.Row="1" Grid.Column="1" Width="50"/>
        </Grid>
    </DockPanel>
</Window>
